# nginx/nginx.conf
server {
    listen 80;
    server_name mvstudio.pro;
    charset utf-8;
    server_tokens off;
    client_max_body_size 1G;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }   

}

server{
    listen 443 ssl;
    server_name mvstudio.pro;
    charset utf-8;
    server_tokens off;
    client_max_body_size 1G;

    ssl_certificate /etc/letsencrypt/live/mvstudio.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mvstudio.pro/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location /api {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
        # ignore cache frontend
    location ~* (service-worker\.js)$ {
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        proxy_no_cache 1;
    }

    location / {
        root /var/www/frontend;
        try_files $uri $uri/ /index.html?q=$uri&$args;
    }

    location /stub_status { #/stub_status로 메트릭 노출
        stub_status; # 메트릭 설정 키워드
        allow 127.0.0.1; # 로컬 호스트 엑세스 허용
        allow 172.18.0.0/16; # 도커 컨테이너들 엑세스 허용 (nginx-prometheus-exporter가 메트릭을 수집 할수있게 해주는 역활)
    }
}