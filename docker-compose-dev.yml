version: '3'

services:
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - mvs

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mvs

  celery:
    build:
      context: ./MVStudio-Backend
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis
      - rabbitmq
    networks:
      - mvs

  celery-beat:
    build:
      context: ./MVStudio-Backend
    command: celery -A config beat --loglevel=info
    depends_on:
      - redis
      - rabbitmq
    networks:
      - mvs

  flower:
    image: mher/flower:0.9.7
    build:
      context: ./MVStudio-Backend
    working_dir: /MVStudio-Backend
    command: celery flower --port=5555 --broker=$CELERY_BROKER_URL
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq:
        condition: service_healthy
      celery:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - mvs

  backend:
    container_name: MVStudio-Backend
    build:
      context: ./MVStudio-Backend
    volumes:
      - static_volume:/MVStudio-Backend/static
      - ./MVStudio-Backend:/MVStudio-Backend
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - rabbitmq
    networks:
      - mvs
    restart: always
    command: >
      sh -c "sleep 5 && %
            python manage.py makemigrations &&
            python manage.py makemigrations member &&
            python manage.py makemigrations music_videos &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"

volumes:
  static_volume:
  build_folder:

networks:
  mvs:
